module Example exposing (..)

import Expect exposing (Expectation)
import Fuzz exposing (Fuzzer, int, list, string)
import Main exposing (fuel, rFuel)
import Test exposing (..)


suite : Test
suite =
    describe "day 1"
        [ test "fuel 12" <|
            \_ -> Expect.equal 2 <| fuel 12
        , test "fuel 14" <|
            \_ -> Expect.equal 2 <| fuel 14
        , test "fuel 1969" <|
            \_ -> Expect.equal 654 <| fuel 1969
        , test "fuel 100756" <|
            \_ -> Expect.equal 33583 <| fuel 100756
        , test "rFuel 12" <|
            \_ -> Expect.equal 2 <| rFuel 12
        , test "rFuel 14" <|
            \_ -> Expect.equal 2 <| rFuel 14
        , test "rFuel 1969" <|
            \_ -> Expect.equal 966 <| rFuel 1969
        , test "rFuel 100756" <|
            \_ -> Expect.equal 50346 <| rFuel 100756
        , test "fuel sum" <|
            \_ ->
                let
                    weights =
                        [ 139616
                        , 148675
                        , 139706
                        , 89248
                        , 63979
                        , 140157
                        , 80815
                        , 74613
                        , 147394
                        , 117757
                        , 52711
                        , 137502
                        , 83219
                        , 71821
                        , 104791
                        , 104448
                        , 89677
                        , 74804
                        , 128554
                        , 125346
                        , 138662
                        , 136114
                        , 110521
                        , 143060
                        , 117221
                        , 61827
                        , 142517
                        , 119651
                        , 110249
                        , 79507
                        , 126873
                        , 144314
                        , 106224
                        , 68369
                        , 64974
                        , 75958
                        , 54365
                        , 62977
                        , 144205
                        , 141953
                        , 96671
                        , 138559
                        , 84377
                        , 110649
                        , 74845
                        , 103697
                        , 83778
                        , 129677
                        , 65904
                        , 113836
                        , 126255
                        , 114839
                        , 135004
                        , 120632
                        , 103543
                        , 139442
                        , 146017
                        , 107982
                        , 146149
                        , 104431
                        , 133978
                        , 57697
                        , 86463
                        , 122606
                        , 95701
                        , 84680
                        , 139779
                        , 71970
                        , 80514
                        , 83229
                        , 143172
                        , 123825
                        , 79849
                        , 109438
                        , 144655
                        , 130229
                        , 97853
                        , 67769
                        , 62040
                        , 125972
                        , 93546
                        , 77516
                        , 103971
                        , 114918
                        , 84445
                        , 123466
                        , 56622
                        , 135859
                        , 90966
                        , 77417
                        , 125790
                        , 144466
                        , 136980
                        , 147914
                        , 92955
                        , 75165
                        , 144271
                        , 135509
                        , 98379
                        , 118530
                        ]

                    total =
                        List.map fuel weights
                            |> List.sum
                in
                Expect.equal 3576689 total
        , test "rFuel sum" <|
            \_ ->
                let
                    weights =
                        [ 139616
                        , 148675
                        , 139706
                        , 89248
                        , 63979
                        , 140157
                        , 80815
                        , 74613
                        , 147394
                        , 117757
                        , 52711
                        , 137502
                        , 83219
                        , 71821
                        , 104791
                        , 104448
                        , 89677
                        , 74804
                        , 128554
                        , 125346
                        , 138662
                        , 136114
                        , 110521
                        , 143060
                        , 117221
                        , 61827
                        , 142517
                        , 119651
                        , 110249
                        , 79507
                        , 126873
                        , 144314
                        , 106224
                        , 68369
                        , 64974
                        , 75958
                        , 54365
                        , 62977
                        , 144205
                        , 141953
                        , 96671
                        , 138559
                        , 84377
                        , 110649
                        , 74845
                        , 103697
                        , 83778
                        , 129677
                        , 65904
                        , 113836
                        , 126255
                        , 114839
                        , 135004
                        , 120632
                        , 103543
                        , 139442
                        , 146017
                        , 107982
                        , 146149
                        , 104431
                        , 133978
                        , 57697
                        , 86463
                        , 122606
                        , 95701
                        , 84680
                        , 139779
                        , 71970
                        , 80514
                        , 83229
                        , 143172
                        , 123825
                        , 79849
                        , 109438
                        , 144655
                        , 130229
                        , 97853
                        , 67769
                        , 62040
                        , 125972
                        , 93546
                        , 77516
                        , 103971
                        , 114918
                        , 84445
                        , 123466
                        , 56622
                        , 135859
                        , 90966
                        , 77417
                        , 125790
                        , 144466
                        , 136980
                        , 147914
                        , 92955
                        , 75165
                        , 144271
                        , 135509
                        , 98379
                        , 118530
                        ]

                    total =
                        List.map rFuel weights
                            |> List.sum
                in
                Expect.equal 2 total
        ]
